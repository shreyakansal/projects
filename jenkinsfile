pipeline {
    environment{
        registry = "352532006040.dkr.ecr.ap-south-1.amazonaws.com"
        ECR_REPO= "352532006040.dkr.ecr.ap-south-1.amazonaws.com"
    }
    
	parameters {
		 string( description: 'Select a Branch?', name: 'BRANCH')
		 choice(choices: '''authentication-api\ndata-management-api\ngst-filing-api\ngstn-integration-api\npwc-gstn-fe''' , description: ' Select a Application?', name: 'APPLICATION')
         choice(choices: '''uat\nproduction'''   ,description: ' Select env for deployment?', name: 'ENV_NAME')
		 choice(choices: '''blank\nfix\nminor\nmajor''', description: 'Type of Update', name: 'UPDATE')
	}
agent any

    stages {
	
		stage ('Clean Workspace') {
			steps {
        			deleteDir()
 	     		}
		}

		stage('Clone GIT Repo') {
			steps {
				script {
					git(url: 'https://neha.dixit@gitlab.intelligrape.net/tothenew/pwc-gstn/${APPLICATION}.git', branch: '${BRANCH}',credentialsId: 'git-id')
				}
			}
		}
        stage('Build') {
            steps {
                script{
                   GIT_COMMIT_SHORT = sh(
                   script: "printf \$(git rev-parse --short HEAD)",
                    returnStdout: true )
                    echo "${GIT_COMMIT_SHORT}"
                    currentBuild.displayName = "${BUILD_NUMBER} - ${APPLICATION}-${ GIT_COMMIT_SHORT}"
                    currentBuild.description = "${ECR_REPO}/${APPLICATION}"
                }
               
                sh """
                  eval `aws ecr get-login --no-include-email --region ap-south-1 | sed 's|https://||'`
                   docker build . -t "352532006040.dkr.ecr.ap-south-1.amazonaws.com/${APPLICATION}":"${GIT_COMMIT_SHORT}" -f docker/Dockerfile
                   docker push "352532006040.dkr.ecr.ap-south-1.amazonaws.com/${APPLICATION}":"${GIT_COMMIT_SHORT}"
                """
                 
                 
               }
            }
        }
    }





